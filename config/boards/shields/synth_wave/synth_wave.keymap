/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
    
    sensors: sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&left_encoder &right_encoder>;
        triggers-per-rotation = <20>;
    };
    
    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
                &kp TAB &kp Q &kp W &kp E &kp R &kp T                       &kp Y   &kp U     &kp I   &kp O   &kp P   &kp BKSP
                &kp LSHIFT &kp A &kp S &kp D &kp F &kp G                    &kp H   &kp J     &kp K   &kp L   &kp SEMICOLON    &kp SINGLE_QUOTE
                &kp LCTRL &kp Z &kp X &kp C &kp V &kp B                     &kp N   &kp M   &kp COMMA &kp DOT &kp SLASH &kp ESC
                            &kp C_MUTE &lt 4 LGUI &kp TAB &kp SPACE   &bt BT_CLR &kp ENTER &mo 1 &kp RALT
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        num_layer {
            bindings = <
                &kp TAB &kp N1 &kp N2 &kp N3 &kp N4 &kp N5                       &kp N6   &kp N7     &kp N8   &kp N9   &kp N0   &kp BKSP
                &kp LSHIFT &kp EQUAL &kp MINUS &kp ASTERISK &kp SLASH &kp T                    &kp H   &kp J     &kp K   &kp L   &kp SEMICOLON    &kp SINGLE_QUOTE
                &kp LCTRL &kp N1 &kp N2 &kp N3 &kp N4 &kp N5                &kp N   &kp M   &kp COMMA &kp DOT &kp SLASH &kp ESC
                            &kp C_MUTE &kp LGUI &kp TAB &kp SPACE   &bt BT_CLR &kp ENTER &kp LGUI &mo 2
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        F_layer {
            bindings = <
                &kp F1 &kp F2 &kp F3 &kp F4 &kp F5                       &kp F6   &kp F7     &kp F8   &kp F9   &kp F10   &kp F11 &kp F12
                &kp LSHIFT &kp EQUAL &kp MINUS &kp ASTERISK &kp SLASH &kp T                    &kp H   &kp J     &kp K   &kp L   &kp SEMICOLON    &kp SINGLE_QUOTE
                &kp LCTRL &kp N1 &kp N2 &kp N3 &kp N4 &kp N5                &kp N   &kp M   &kp COMMA &kp DOT &kp SLASH &kp ESC
                            &kp C_MUTE &mo 2 &kp TAB &kp SPACE   &bt BT_CLR &kp ENTER &kp LGUI &kp RALT
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        game_layer {
            bindings = <
                &kp TAB &kp Q &kp W &kp E &kp R &kp G                       &kp Y   &kp U     &kp I   &kp O   &kp P   &kp BKSP
                &kp LSHIFT &kp A &kp S &kp D &kp F &kp T                    &kp H   &kp J     &kp K   &kp L   &kp SEMICOLON    &kp SINGLE_QUOTE
                &kp LCTRL &kp N1 &kp N2 &kp N3 &kp N4 &kp N5                &kp N   &kp M   &kp COMMA &kp DOT &kp SLASH &kp ESC
                            &kp C_MUTE &kp B &kp Y &kp SPACE   &bt BT_CLR &kp ENTER &kp LGUI &kp RALT
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};